name: Build and Push Docker image to ECR

on:
    workflow_dispatch:
        inputs:
            branch:
                description: 'The branch to use for the Docker image build'
                required: true
                default: '6.0.24'

            image-tag:
                description: 'Docker image tag (e.g., latest, 6.0.24-config, etc.)'
                required: true
                default: 'latest'

jobs:
    build-and-push:
        runs-on: ubuntu-latest

        steps:
          - name: Checkout repository
            uses: actions/checkout@ee0669bd1cc54295c223e0bb666b733df41de1c5   #2.7.0 
            with:
                ref: ${{ inputs.branch }}

          - name: Set up Docker Buildx
            uses: docker/setup-buildx-action@v2

          - name: Authenticate to OIDC
            uses: aws-actions/configure-aws-credentials@e3dd6a429d7300a6a4c196c26e071d42e0343502     # v4.0.2
            with:
                role-to-assume: ${{ secrets.AWS_ROLE_TO_ASSUME }}
                aws-region: ${{ secrets.AWS_REGION }}
                role-session-name: ${{ github.actor }}

          
          - name: Download properties files from S3 to src/main/resources/
            run: |
                aws s3 cp s3://cbio-nonprod-backend-configs/application.properties src/main/resources/application.properties

          - name: Rename properties files
            run: |
                mv src/main/resources/log4j.properties.EXAMPLE src/main/resources/log4j.properties
                mv src/main/resources/security.properties.EXAMPLE src/main/resources/security.properties

          - name: Build Docker image
            run: |
                docker buildx build --no-cache --platform linux/amd64 -t ${{ secrets.AWS_ECR_REGISTRY }}:${{ inputs.image-tag }} -f docker/web-and-data/Dockerfile .

          - name: Push Docker image to ECR
            run: |
                docker push ${{ secrets.AWS_ECR_REGISTRY }}:${{ inputs.image-tag }}

          - name: Clean up Docker images
            run: |
                docker builder prune --all --force